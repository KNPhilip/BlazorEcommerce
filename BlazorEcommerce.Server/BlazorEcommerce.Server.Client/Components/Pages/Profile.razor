@page "/profile"
@attribute [Authorize]

@inject IAuthUIService AuthUIService

<PageTitle>Your profile</PageTitle>

<div class="container mt-5">
    <AuthorizeView>
        <h3>Hi! You're logged in with @context.User.Identity!.Name</h3>
    </AuthorizeView>

    <h5>Delivery Address</h5>
    <AddressForm />
    <br />

    <h5>Change Password</h5>

    <EditForm Model="request" OnValidSubmit="ChangePassword">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="mb-3">
            <label for="newPassword">New Password</label>
            <InputText id="newPassword" @bind-Value="request.NewPassword" class="form-control" type="password" />
            <ValidationMessage For="@(() => request.NewPassword)" />
        </div>
        <div class="mb-3">
            <label for="confirmPassword">Confirm New Password</label>
            <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password" />
            <ValidationMessage For="@(() => request.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary mb-2">Apply</button>
    </EditForm>
    @message
</div>

@code {
    UserChangePasswordDto request = new();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        bool result = await AuthUIService.ChangePassword(request);
        message = result ? "Password successfully reset" : "Could not reset password, please try again.";
    }
}
