@page "/register"
@inject IAuthUIService AuthService

<PageTitle>Register</PageTitle>

<div class="container mt-5">
    <h3>Register</h3>

    <EditForm Model="user" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>
        <div class="mb-3">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <div class="mb-3">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>
        <MudText Class="mb-2">Already have an account?&nbsp;<MudLink Style="font-weight:bold;" Href="/login">login here!</MudLink></MudText>
        <button type="submit" class="btn btn-primary mb-2">Register</button>
        <div class="@resultMessageCssClass">
            <span>@resultMessage</span>
        </div>
    </EditForm>
</div>

@code {
    UserRegisterDto user = new();
    string resultMessage = string.Empty;
    string resultMessageCssClass = string.Empty;

    private async Task HandleRegistration()
    {
        bool result = await AuthService.Register(user);
        resultMessage = result ? "Successfully registered" : "Could not register, please try again.";
        resultMessageCssClass = result ? "text-success" : "text-danger";
    }
}
