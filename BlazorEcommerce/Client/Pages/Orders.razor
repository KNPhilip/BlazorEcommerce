@page "/orders"
@inject IOrderService OrderService

<h3>Orders</h3>

@if (orders is null) {
    <span>Loading your orders...</span>
}
else if (orders.Count <= 0) {
    <span>You have no orders, yet.</span>
}
else
{
    foreach(var order in orders)
    {
        <div class="container">
            <div class="image-wrapper">
                @if(!string.IsNullOrEmpty(order.ProductImageUrl))
                {
                    <img src="@order.ProductImageUrl" class="image" />
                }
                else if (order.Images.Count > 0)
                {
                    <img src="@order.Images[0].Data" class="image" />
                }
            </div>
            <div class="details">
                <h4>@order.Product</h4>
                <span>@order.OrderDate</span>
                <br />
                <a class="show-more" href="orders/@order.Id">Show more...</a>
            </div>
            <div class="order-price">$@order.TotalPrice</div>
        </div>
    }
}

@code {
    List<OrderOverviewDto> orders = null;

    protected override async Task OnInitializedAsync()
    {
        orders = await OrderService.GetOrders();
    }
}