@inject NavigationManager NavigationManager

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(ShopLayout)">
                <NotAuthorized>
                    <div class="container mt-5">
                        <h3>Whoops! You're not allowed to see this page.</h3>
                        <h5>Please <a @onclick="Login" style="color:dodgerblue; cursor:pointer;">login</a> or <a href="register" style="color:dodgerblue; cursor:pointer;">register</a>.</h5>
                    </div>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(ShopLayout)">
                <div class="container mt-5">
                    <h4 role="alert">Sorry, there's nothing at this address.</h4>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private void Login() =>
        NavigationManager.NavigateTo($"login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}");
}