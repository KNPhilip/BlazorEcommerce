@page "/reset-password"

@inject IAuthUIService AuthUIService
@inject ISnackbar SnackBar
@inject NavigationManager NavigationManager

<PageTitle>Reset Password</PageTitle>

<div class="container mt-5">
    @if (userToken is null || userMail is null || !validUserToken)
    {
        <MudText Typo="Typo.h5">Reset password</MudText>
        <MudAlert Class="mb-4 mt-4" Severity="Severity.Error" Variant="Variant.Filled">
            @(userToken is null || userMail is null ? "This page can not be called without a valid token and a valid user email address!" : message)
        </MudAlert>
        <MudButton Href="login" Variant="Variant.Filled" Color="Color.Info" Class="ml-auto">Login</MudButton>
    }
    else
    {
        <EditForm Model="@resetDto" OnValidSubmit="@HandleReset">
            <DataAnnotationsValidator />
            <MudText Typo="Typo.h5">Reset password</MudText>
            <MudTextField Label="Email address" Disabled="true" HelperText="Reset password for this user" @bind-Value="@userMail" For="@(() => resetDto.UserEmail)" />
            <MudTextField Label="New Password" HelperText="Choose a new password" Class="mt-2" @bind-Value="@resetDto.NewPassword" For="@(() => resetDto.NewPassword)" InputType="InputType.Password" />
            <MudTextField Label="repeat new Password" HelperText="Repeat your new password" Class="mt-3 mb-3" @bind-Value="@resetDto.ConfirmNewPassword" For="@(() => resetDto.ConfirmNewPassword)" InputType="InputType.Password" />
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Info" StartIcon="@Icons.Material.Filled.Save" Class="ml-auto">Reset Password</MudButton>
        </EditForm>
    }
</div>
